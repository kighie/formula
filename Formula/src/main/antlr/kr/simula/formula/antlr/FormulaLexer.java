// Generated from Formula.g4 by ANTLR 4.4
package kr.simula.formula.antlr;

//	package kr.simula.formula.antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class FormulaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__23=1, T__22=2, T__21=3, T__20=4, T__19=5, T__18=6, T__17=7, T__16=8, 
		T__15=9, T__14=10, T__13=11, T__12=12, T__11=13, T__10=14, T__9=15, T__8=16, 
		T__7=17, T__6=18, T__5=19, T__4=20, T__3=21, T__2=22, T__1=23, T__0=24, 
		NUMBER=25, STRING_LITERAL=26, NULL=27, BOOLEAN=28, IDENT=29, WS=30, MULTILINE_COMMENT=31, 
		LINE_COMMENT=32;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '"
	};
	public static final String[] ruleNames = {
		"T__23", "T__22", "T__21", "T__20", "T__19", "T__18", "T__17", "T__16", 
		"T__15", "T__14", "T__13", "T__12", "T__11", "T__10", "T__9", "T__8", 
		"T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "DIGIT", 
		"LETTER", "NUMBER", "STRING_LITERAL", "NULL", "BOOLEAN", "IDENT", "WS", 
		"MULTILINE_COMMENT", "LINE_COMMENT", "EOL"
	};


	public FormulaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Formula.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\"\u00f4\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\6\3"+
		"\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r"+
		"\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\23\3\23"+
		"\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\30\3\30"+
		"\3\31\3\31\3\32\3\32\3\33\3\33\3\34\6\34\u0089\n\34\r\34\16\34\u008a\3"+
		"\34\3\34\6\34\u008f\n\34\r\34\16\34\u0090\5\34\u0093\n\34\3\35\3\35\7"+
		"\35\u0097\n\35\f\35\16\35\u009a\13\35\3\35\3\35\3\35\7\35\u009f\n\35\f"+
		"\35\16\35\u00a2\13\35\3\35\5\35\u00a5\n\35\3\36\3\36\3\36\3\36\3\36\3"+
		"\36\3\36\3\36\3\36\3\36\3\36\5\36\u00b2\n\36\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\5\37"+
		"\u00c6\n\37\3 \3 \3 \7 \u00cb\n \f \16 \u00ce\13 \3!\6!\u00d1\n!\r!\16"+
		"!\u00d2\3!\3!\3\"\3\"\3\"\3\"\7\"\u00db\n\"\f\"\16\"\u00de\13\"\3\"\3"+
		"\"\3\"\3\"\3\"\3#\3#\3#\3#\7#\u00e9\n#\f#\16#\u00ec\13#\3#\3#\3$\3$\3"+
		"$\5$\u00f3\n$\3\u00dc\2%\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f"+
		"\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63"+
		"\2\65\2\67\339\34;\35=\36?\37A C!E\"G\2\3\2\7\b\2&&C\\aac|\u3132\u3191"+
		"\uac02\ud7b1\5\2\f\f\17\17$$\5\2\f\f\17\17))\5\2\13\f\16\17\"\"\4\2\f"+
		"\f\17\17\u0101\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3"+
		"\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2"+
		"\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3"+
		"\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2"+
		"\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2"+
		"\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\3I\3\2\2\2\5K\3\2\2\2"+
		"\7N\3\2\2\2\tP\3\2\2\2\13S\3\2\2\2\rU\3\2\2\2\17W\3\2\2\2\21Y\3\2\2\2"+
		"\23[\3\2\2\2\25]\3\2\2\2\27`\3\2\2\2\31c\3\2\2\2\33f\3\2\2\2\35h\3\2\2"+
		"\2\37j\3\2\2\2!l\3\2\2\2#o\3\2\2\2%q\3\2\2\2\'u\3\2\2\2)w\3\2\2\2+y\3"+
		"\2\2\2-}\3\2\2\2/\177\3\2\2\2\61\u0081\3\2\2\2\63\u0083\3\2\2\2\65\u0085"+
		"\3\2\2\2\67\u0088\3\2\2\29\u00a4\3\2\2\2;\u00b1\3\2\2\2=\u00c5\3\2\2\2"+
		"?\u00c7\3\2\2\2A\u00d0\3\2\2\2C\u00d6\3\2\2\2E\u00e4\3\2\2\2G\u00f2\3"+
		"\2\2\2IJ\7\61\2\2J\4\3\2\2\2KL\7#\2\2LM\7?\2\2M\6\3\2\2\2NO\7]\2\2O\b"+
		"\3\2\2\2PQ\7@\2\2QR\7?\2\2R\n\3\2\2\2ST\7>\2\2T\f\3\2\2\2UV\7_\2\2V\16"+
		"\3\2\2\2WX\7?\2\2X\20\3\2\2\2YZ\7`\2\2Z\22\3\2\2\2[\\\7@\2\2\\\24\3\2"+
		"\2\2]^\7q\2\2^_\7t\2\2_\26\3\2\2\2`a\7>\2\2ab\7?\2\2b\30\3\2\2\2cd\7>"+
		"\2\2de\7@\2\2e\32\3\2\2\2fg\7\'\2\2g\34\3\2\2\2hi\7(\2\2i\36\3\2\2\2j"+
		"k\7*\2\2k \3\2\2\2lm\7k\2\2mn\7u\2\2n\"\3\2\2\2op\7+\2\2p$\3\2\2\2qr\7"+
		"c\2\2rs\7p\2\2st\7f\2\2t&\3\2\2\2uv\7,\2\2v(\3\2\2\2wx\7-\2\2x*\3\2\2"+
		"\2yz\7p\2\2z{\7q\2\2{|\7v\2\2|,\3\2\2\2}~\7.\2\2~.\3\2\2\2\177\u0080\7"+
		"/\2\2\u0080\60\3\2\2\2\u0081\u0082\7\60\2\2\u0082\62\3\2\2\2\u0083\u0084"+
		"\4\62;\2\u0084\64\3\2\2\2\u0085\u0086\t\2\2\2\u0086\66\3\2\2\2\u0087\u0089"+
		"\5\63\32\2\u0088\u0087\3\2\2\2\u0089\u008a\3\2\2\2\u008a\u0088\3\2\2\2"+
		"\u008a\u008b\3\2\2\2\u008b\u0092\3\2\2\2\u008c\u008e\7\60\2\2\u008d\u008f"+
		"\5\63\32\2\u008e\u008d\3\2\2\2\u008f\u0090\3\2\2\2\u0090\u008e\3\2\2\2"+
		"\u0090\u0091\3\2\2\2\u0091\u0093\3\2\2\2\u0092\u008c\3\2\2\2\u0092\u0093"+
		"\3\2\2\2\u00938\3\2\2\2\u0094\u0098\7$\2\2\u0095\u0097\n\3\2\2\u0096\u0095"+
		"\3\2\2\2\u0097\u009a\3\2\2\2\u0098\u0096\3\2\2\2\u0098\u0099\3\2\2\2\u0099"+
		"\u009b\3\2\2\2\u009a\u0098\3\2\2\2\u009b\u00a5\7$\2\2\u009c\u00a0\7)\2"+
		"\2\u009d\u009f\n\4\2\2\u009e\u009d\3\2\2\2\u009f\u00a2\3\2\2\2\u00a0\u009e"+
		"\3\2\2\2\u00a0\u00a1\3\2\2\2\u00a1\u00a3\3\2\2\2\u00a2\u00a0\3\2\2\2\u00a3"+
		"\u00a5\7)\2\2\u00a4\u0094\3\2\2\2\u00a4\u009c\3\2\2\2\u00a5:\3\2\2\2\u00a6"+
		"\u00a7\7p\2\2\u00a7\u00a8\7w\2\2\u00a8\u00a9\7n\2\2\u00a9\u00b2\7n\2\2"+
		"\u00aa\u00ab\7p\2\2\u00ab\u00ac\7k\2\2\u00ac\u00b2\7n\2\2\u00ad\u00ae"+
		"\7P\2\2\u00ae\u00af\7W\2\2\u00af\u00b0\7N\2\2\u00b0\u00b2\7N\2\2\u00b1"+
		"\u00a6\3\2\2\2\u00b1\u00aa\3\2\2\2\u00b1\u00ad\3\2\2\2\u00b2<\3\2\2\2"+
		"\u00b3\u00b4\7v\2\2\u00b4\u00b5\7t\2\2\u00b5\u00b6\7w\2\2\u00b6\u00c6"+
		"\7g\2\2\u00b7\u00b8\7h\2\2\u00b8\u00b9\7c\2\2\u00b9\u00ba\7n\2\2\u00ba"+
		"\u00bb\7u\2\2\u00bb\u00c6\7g\2\2\u00bc\u00bd\7V\2\2\u00bd\u00be\7T\2\2"+
		"\u00be\u00bf\7W\2\2\u00bf\u00c6\7G\2\2\u00c0\u00c1\7H\2\2\u00c1\u00c2"+
		"\7C\2\2\u00c2\u00c3\7N\2\2\u00c3\u00c4\7U\2\2\u00c4\u00c6\7G\2\2\u00c5"+
		"\u00b3\3\2\2\2\u00c5\u00b7\3\2\2\2\u00c5\u00bc\3\2\2\2\u00c5\u00c0\3\2"+
		"\2\2\u00c6>\3\2\2\2\u00c7\u00cc\5\65\33\2\u00c8\u00cb\5\65\33\2\u00c9"+
		"\u00cb\5\63\32\2\u00ca\u00c8\3\2\2\2\u00ca\u00c9\3\2\2\2\u00cb\u00ce\3"+
		"\2\2\2\u00cc\u00ca\3\2\2\2\u00cc\u00cd\3\2\2\2\u00cd@\3\2\2\2\u00ce\u00cc"+
		"\3\2\2\2\u00cf\u00d1\t\5\2\2\u00d0\u00cf\3\2\2\2\u00d1\u00d2\3\2\2\2\u00d2"+
		"\u00d0\3\2\2\2\u00d2\u00d3\3\2\2\2\u00d3\u00d4\3\2\2\2\u00d4\u00d5\b!"+
		"\2\2\u00d5B\3\2\2\2\u00d6\u00d7\7\61\2\2\u00d7\u00d8\7,\2\2\u00d8\u00dc"+
		"\3\2\2\2\u00d9\u00db\13\2\2\2\u00da\u00d9\3\2\2\2\u00db\u00de\3\2\2\2"+
		"\u00dc\u00dd\3\2\2\2\u00dc\u00da\3\2\2\2\u00dd\u00df\3\2\2\2\u00de\u00dc"+
		"\3\2\2\2\u00df\u00e0\7,\2\2\u00e0\u00e1\7\61\2\2\u00e1\u00e2\3\2\2\2\u00e2"+
		"\u00e3\b\"\2\2\u00e3D\3\2\2\2\u00e4\u00e5\7\61\2\2\u00e5\u00e6\7\61\2"+
		"\2\u00e6\u00ea\3\2\2\2\u00e7\u00e9\n\6\2\2\u00e8\u00e7\3\2\2\2\u00e9\u00ec"+
		"\3\2\2\2\u00ea\u00e8\3\2\2\2\u00ea\u00eb\3\2\2\2\u00eb\u00ed\3\2\2\2\u00ec"+
		"\u00ea\3\2\2\2\u00ed\u00ee\b#\2\2\u00eeF\3\2\2\2\u00ef\u00f0\7\17\2\2"+
		"\u00f0\u00f3\7\f\2\2\u00f1\u00f3\t\6\2\2\u00f2\u00ef\3\2\2\2\u00f2\u00f1"+
		"\3\2\2\2\u00f3H\3\2\2\2\21\2\u008a\u0090\u0092\u0098\u00a0\u00a4\u00b1"+
		"\u00c5\u00ca\u00cc\u00d2\u00dc\u00ea\u00f2\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}