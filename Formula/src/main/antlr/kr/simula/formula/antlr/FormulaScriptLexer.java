// Generated from FormulaScript.g4 by ANTLR 4.4
package kr.simula.formula.antlr;



//	package kr.simula.formula.antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class FormulaScriptLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__33=1, T__32=2, T__31=3, T__30=4, T__29=5, T__28=6, T__27=7, T__26=8, 
		T__25=9, T__24=10, T__23=11, T__22=12, T__21=13, T__20=14, T__19=15, T__18=16, 
		T__17=17, T__16=18, T__15=19, T__14=20, T__13=21, T__12=22, T__11=23, 
		T__10=24, T__9=25, T__8=26, T__7=27, T__6=28, T__5=29, T__4=30, T__3=31, 
		T__2=32, T__1=33, T__0=34, END_OF_STMT=35, NUMBER=36, STRING_LITERAL=37, 
		NULL=38, BOOLEAN=39, IDENT=40, WS=41, MULTILINE_COMMENT=42, LINE_COMMENT=43;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'"
	};
	public static final String[] ruleNames = {
		"T__33", "T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", 
		"T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", 
		"T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", 
		"T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", 
		"T__0", "END_OF_STMT", "DIGIT", "LETTER", "NUMBER", "STRING_LITERAL", 
		"NULL", "BOOLEAN", "IDENT", "WS", "MULTILINE_COMMENT", "LINE_COMMENT", 
		"EOL"
	};


	public FormulaScriptLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "FormulaScript.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2-\u013c\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4"+
		"\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3"+
		"\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3"+
		"\17\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3"+
		"\24\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3"+
		"\32\3\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3"+
		"\37\3\37\3\37\3\37\3 \3 \3!\3!\3!\3!\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3$\3"+
		"$\3%\3%\3&\3&\3\'\6\'\u00d1\n\'\r\'\16\'\u00d2\3\'\3\'\6\'\u00d7\n\'\r"+
		"\'\16\'\u00d8\5\'\u00db\n\'\3(\3(\7(\u00df\n(\f(\16(\u00e2\13(\3(\3(\3"+
		"(\7(\u00e7\n(\f(\16(\u00ea\13(\3(\5(\u00ed\n(\3)\3)\3)\3)\3)\3)\3)\3)"+
		"\3)\3)\3)\5)\u00fa\n)\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*"+
		"\3*\3*\5*\u010e\n*\3+\3+\3+\7+\u0113\n+\f+\16+\u0116\13+\3,\6,\u0119\n"+
		",\r,\16,\u011a\3,\3,\3-\3-\3-\3-\7-\u0123\n-\f-\16-\u0126\13-\3-\3-\3"+
		"-\3-\3-\3.\3.\3.\3.\7.\u0131\n.\f.\16.\u0134\13.\3.\3.\3/\3/\3/\5/\u013b"+
		"\n/\3\u0124\2\60\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31"+
		"\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65"+
		"\34\67\359\36;\37= ?!A\"C#E$G%I\2K\2M&O\'Q(S)U*W+Y,[-]\2\3\2\7\b\2&&C"+
		"\\aac|\u3132\u3191\uac02\ud7b1\5\2\f\f\17\17$$\5\2\f\f\17\17))\5\2\13"+
		"\f\16\17\"\"\4\2\f\f\17\17\u0149\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2"+
		"\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2"+
		"\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2"+
		"\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2"+
		"\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2"+
		"\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2"+
		"\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\3_\3\2\2\2\5a\3\2"+
		"\2\2\7i\3\2\2\2\tp\3\2\2\2\13w\3\2\2\2\rz\3\2\2\2\17|\3\2\2\2\21~\3\2"+
		"\2\2\23\u0080\3\2\2\2\25\u0082\3\2\2\2\27\u0085\3\2\2\2\31\u0088\3\2\2"+
		"\2\33\u008a\3\2\2\2\35\u008c\3\2\2\2\37\u008f\3\2\2\2!\u0091\3\2\2\2#"+
		"\u0093\3\2\2\2%\u0095\3\2\2\2\'\u0098\3\2\2\2)\u009b\3\2\2\2+\u009d\3"+
		"\2\2\2-\u00a0\3\2\2\2/\u00a2\3\2\2\2\61\u00a4\3\2\2\2\63\u00a7\3\2\2\2"+
		"\65\u00aa\3\2\2\2\67\u00ac\3\2\2\29\u00af\3\2\2\2;\u00b4\3\2\2\2=\u00b6"+
		"\3\2\2\2?\u00ba\3\2\2\2A\u00bc\3\2\2\2C\u00c0\3\2\2\2E\u00c2\3\2\2\2G"+
		"\u00c9\3\2\2\2I\u00cb\3\2\2\2K\u00cd\3\2\2\2M\u00d0\3\2\2\2O\u00ec\3\2"+
		"\2\2Q\u00f9\3\2\2\2S\u010d\3\2\2\2U\u010f\3\2\2\2W\u0118\3\2\2\2Y\u011e"+
		"\3\2\2\2[\u012c\3\2\2\2]\u013a\3\2\2\2_`\7\61\2\2`\4\3\2\2\2ab\7h\2\2"+
		"bc\7q\2\2cd\7t\2\2de\7g\2\2ef\7c\2\2fg\7e\2\2gh\7j\2\2h\6\3\2\2\2ij\7"+
		"g\2\2jk\7n\2\2kl\7u\2\2lm\7g\2\2mn\7k\2\2no\7h\2\2o\b\3\2\2\2pq\7t\2\2"+
		"qr\7g\2\2rs\7v\2\2st\7w\2\2tu\7t\2\2uv\7p\2\2v\n\3\2\2\2wx\7#\2\2xy\7"+
		"?\2\2y\f\3\2\2\2z{\7}\2\2{\16\3\2\2\2|}\7?\2\2}\20\3\2\2\2~\177\7\177"+
		"\2\2\177\22\3\2\2\2\u0080\u0081\7`\2\2\u0081\24\3\2\2\2\u0082\u0083\7"+
		"k\2\2\u0083\u0084\7h\2\2\u0084\26\3\2\2\2\u0085\u0086\7>\2\2\u0086\u0087"+
		"\7?\2\2\u0087\30\3\2\2\2\u0088\u0089\7(\2\2\u0089\32\3\2\2\2\u008a\u008b"+
		"\7*\2\2\u008b\34\3\2\2\2\u008c\u008d\7k\2\2\u008d\u008e\7u\2\2\u008e\36"+
		"\3\2\2\2\u008f\u0090\7,\2\2\u0090 \3\2\2\2\u0091\u0092\7.\2\2\u0092\""+
		"\3\2\2\2\u0093\u0094\7\60\2\2\u0094$\3\2\2\2\u0095\u0096\7/\2\2\u0096"+
		"\u0097\7@\2\2\u0097&\3\2\2\2\u0098\u0099\7>\2\2\u0099\u009a\7/\2\2\u009a"+
		"(\3\2\2\2\u009b\u009c\7<\2\2\u009c*\3\2\2\2\u009d\u009e\7@\2\2\u009e\u009f"+
		"\7?\2\2\u009f,\3\2\2\2\u00a0\u00a1\7>\2\2\u00a1.\3\2\2\2\u00a2\u00a3\7"+
		"@\2\2\u00a3\60\3\2\2\2\u00a4\u00a5\7q\2\2\u00a5\u00a6\7t\2\2\u00a6\62"+
		"\3\2\2\2\u00a7\u00a8\7>\2\2\u00a8\u00a9\7@\2\2\u00a9\64\3\2\2\2\u00aa"+
		"\u00ab\7\'\2\2\u00ab\66\3\2\2\2\u00ac\u00ad\7k\2\2\u00ad\u00ae\7p\2\2"+
		"\u00ae8\3\2\2\2\u00af\u00b0\7g\2\2\u00b0\u00b1\7n\2\2\u00b1\u00b2\7u\2"+
		"\2\u00b2\u00b3\7g\2\2\u00b3:\3\2\2\2\u00b4\u00b5\7+\2\2\u00b5<\3\2\2\2"+
		"\u00b6\u00b7\7c\2\2\u00b7\u00b8\7p\2\2\u00b8\u00b9\7f\2\2\u00b9>\3\2\2"+
		"\2\u00ba\u00bb\7-\2\2\u00bb@\3\2\2\2\u00bc\u00bd\7p\2\2\u00bd\u00be\7"+
		"q\2\2\u00be\u00bf\7v\2\2\u00bfB\3\2\2\2\u00c0\u00c1\7/\2\2\u00c1D\3\2"+
		"\2\2\u00c2\u00c3\7k\2\2\u00c3\u00c4\7o\2\2\u00c4\u00c5\7r\2\2\u00c5\u00c6"+
		"\7q\2\2\u00c6\u00c7\7t\2\2\u00c7\u00c8\7v\2\2\u00c8F\3\2\2\2\u00c9\u00ca"+
		"\7=\2\2\u00caH\3\2\2\2\u00cb\u00cc\4\62;\2\u00ccJ\3\2\2\2\u00cd\u00ce"+
		"\t\2\2\2\u00ceL\3\2\2\2\u00cf\u00d1\5I%\2\u00d0\u00cf\3\2\2\2\u00d1\u00d2"+
		"\3\2\2\2\u00d2\u00d0\3\2\2\2\u00d2\u00d3\3\2\2\2\u00d3\u00da\3\2\2\2\u00d4"+
		"\u00d6\7\60\2\2\u00d5\u00d7\5I%\2\u00d6\u00d5\3\2\2\2\u00d7\u00d8\3\2"+
		"\2\2\u00d8\u00d6\3\2\2\2\u00d8\u00d9\3\2\2\2\u00d9\u00db\3\2\2\2\u00da"+
		"\u00d4\3\2\2\2\u00da\u00db\3\2\2\2\u00dbN\3\2\2\2\u00dc\u00e0\7$\2\2\u00dd"+
		"\u00df\n\3\2\2\u00de\u00dd\3\2\2\2\u00df\u00e2\3\2\2\2\u00e0\u00de\3\2"+
		"\2\2\u00e0\u00e1\3\2\2\2\u00e1\u00e3\3\2\2\2\u00e2\u00e0\3\2\2\2\u00e3"+
		"\u00ed\7$\2\2\u00e4\u00e8\7)\2\2\u00e5\u00e7\n\4\2\2\u00e6\u00e5\3\2\2"+
		"\2\u00e7\u00ea\3\2\2\2\u00e8\u00e6\3\2\2\2\u00e8\u00e9\3\2\2\2\u00e9\u00eb"+
		"\3\2\2\2\u00ea\u00e8\3\2\2\2\u00eb\u00ed\7)\2\2\u00ec\u00dc\3\2\2\2\u00ec"+
		"\u00e4\3\2\2\2\u00edP\3\2\2\2\u00ee\u00ef\7p\2\2\u00ef\u00f0\7w\2\2\u00f0"+
		"\u00f1\7n\2\2\u00f1\u00fa\7n\2\2\u00f2\u00f3\7p\2\2\u00f3\u00f4\7k\2\2"+
		"\u00f4\u00fa\7n\2\2\u00f5\u00f6\7P\2\2\u00f6\u00f7\7W\2\2\u00f7\u00f8"+
		"\7N\2\2\u00f8\u00fa\7N\2\2\u00f9\u00ee\3\2\2\2\u00f9\u00f2\3\2\2\2\u00f9"+
		"\u00f5\3\2\2\2\u00faR\3\2\2\2\u00fb\u00fc\7v\2\2\u00fc\u00fd\7t\2\2\u00fd"+
		"\u00fe\7w\2\2\u00fe\u010e\7g\2\2\u00ff\u0100\7h\2\2\u0100\u0101\7c\2\2"+
		"\u0101\u0102\7n\2\2\u0102\u0103\7u\2\2\u0103\u010e\7g\2\2\u0104\u0105"+
		"\7V\2\2\u0105\u0106\7T\2\2\u0106\u0107\7W\2\2\u0107\u010e\7G\2\2\u0108"+
		"\u0109\7H\2\2\u0109\u010a\7C\2\2\u010a\u010b\7N\2\2\u010b\u010c\7U\2\2"+
		"\u010c\u010e\7G\2\2\u010d\u00fb\3\2\2\2\u010d\u00ff\3\2\2\2\u010d\u0104"+
		"\3\2\2\2\u010d\u0108\3\2\2\2\u010eT\3\2\2\2\u010f\u0114\5K&\2\u0110\u0113"+
		"\5K&\2\u0111\u0113\5I%\2\u0112\u0110\3\2\2\2\u0112\u0111\3\2\2\2\u0113"+
		"\u0116\3\2\2\2\u0114\u0112\3\2\2\2\u0114\u0115\3\2\2\2\u0115V\3\2\2\2"+
		"\u0116\u0114\3\2\2\2\u0117\u0119\t\5\2\2\u0118\u0117\3\2\2\2\u0119\u011a"+
		"\3\2\2\2\u011a\u0118\3\2\2\2\u011a\u011b\3\2\2\2\u011b\u011c\3\2\2\2\u011c"+
		"\u011d\b,\2\2\u011dX\3\2\2\2\u011e\u011f\7\61\2\2\u011f\u0120\7,\2\2\u0120"+
		"\u0124\3\2\2\2\u0121\u0123\13\2\2\2\u0122\u0121\3\2\2\2\u0123\u0126\3"+
		"\2\2\2\u0124\u0125\3\2\2\2\u0124\u0122\3\2\2\2\u0125\u0127\3\2\2\2\u0126"+
		"\u0124\3\2\2\2\u0127\u0128\7,\2\2\u0128\u0129\7\61\2\2\u0129\u012a\3\2"+
		"\2\2\u012a\u012b\b-\2\2\u012bZ\3\2\2\2\u012c\u012d\7\61\2\2\u012d\u012e"+
		"\7\61\2\2\u012e\u0132\3\2\2\2\u012f\u0131\n\6\2\2\u0130\u012f\3\2\2\2"+
		"\u0131\u0134\3\2\2\2\u0132\u0130\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u0135"+
		"\3\2\2\2\u0134\u0132\3\2\2\2\u0135\u0136\b.\2\2\u0136\\\3\2\2\2\u0137"+
		"\u0138\7\17\2\2\u0138\u013b\7\f\2\2\u0139\u013b\t\6\2\2\u013a\u0137\3"+
		"\2\2\2\u013a\u0139\3\2\2\2\u013b^\3\2\2\2\21\2\u00d2\u00d8\u00da\u00e0"+
		"\u00e8\u00ec\u00f9\u010d\u0112\u0114\u011a\u0124\u0132\u013a\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}