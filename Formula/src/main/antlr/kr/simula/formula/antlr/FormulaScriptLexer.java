// Generated from FormulaScript.g4 by ANTLR 4.5
package kr.simula.formula.antlr;



//	package kr.simula.formula.antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class FormulaScriptLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, END_OF_STMT=43, NUMBER=44, STRING_LITERAL=45, 
		NULL=46, BOOLEAN=47, IDENT=48, WS=49, MULTILINE_COMMENT=50, LINE_COMMENT=51;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "END_OF_STMT", "DIGIT", "LETTER", "NUMBER", "STRING_LITERAL", 
		"NULL", "BOOLEAN", "IDENT", "WS", "MULTILINE_COMMENT", "LINE_COMMENT", 
		"WhiteSpace", "EOL"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'importJava'", "'paramdef'", "'as'", "'<-'", "'fndef'", "'('", 
		"')'", "':'", "'{'", "'}'", "','", "'return'", "'typedef'", "'if'", "'elseif'", 
		"'else'", "'foreach'", "'in'", "'R{'", "'r{'", "'['", "']'", "'->'", "'='", 
		"'.'", "'-'", "'%'", "'^'", "'*'", "'/'", "'+'", "'&'", "'is'", "'!='", 
		"'<>'", "'not'", "'>'", "'>='", "'<'", "'<='", "'and'", "'or'", "';'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "END_OF_STMT", "NUMBER", "STRING_LITERAL", 
		"NULL", "BOOLEAN", "IDENT", "WS", "MULTILINE_COMMENT", "LINE_COMMENT"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public FormulaScriptLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "FormulaScript.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\65\u0177\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\3\2\3\2\3\2\3\2\3\2\3\2\3\2"+
		"\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\5\3"+
		"\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3"+
		"\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16"+
		"\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21"+
		"\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23"+
		"\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\31"+
		"\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3"+
		" \3!\3!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3%\3&\3&\3\'\3\'\3\'\3"+
		"(\3(\3)\3)\3)\3*\3*\3*\3*\3+\3+\3+\3,\3,\3-\3-\3.\3.\3/\6/\u010b\n/\r"+
		"/\16/\u010c\3/\3/\6/\u0111\n/\r/\16/\u0112\5/\u0115\n/\3\60\3\60\7\60"+
		"\u0119\n\60\f\60\16\60\u011c\13\60\3\60\3\60\3\60\7\60\u0121\n\60\f\60"+
		"\16\60\u0124\13\60\3\60\5\60\u0127\n\60\3\61\3\61\3\61\3\61\3\61\3\61"+
		"\3\61\3\61\3\61\3\61\3\61\5\61\u0134\n\61\3\62\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\5\62\u0148"+
		"\n\62\3\63\3\63\3\63\7\63\u014d\n\63\f\63\16\63\u0150\13\63\3\64\3\64"+
		"\3\64\3\64\3\65\3\65\3\65\3\65\7\65\u015a\n\65\f\65\16\65\u015d\13\65"+
		"\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\7\66\u0168\n\66\f\66\16"+
		"\66\u016b\13\66\3\66\3\66\3\66\3\66\3\67\3\67\38\38\38\58\u0176\n8\4\u015b"+
		"\u0169\29\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33"+
		"\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67"+
		"\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y\2[\2]._/a\60c\61e\62g\63i\64"+
		"k\65m\2o\2\3\2\7\b\2&&C\\aac|\u3132\u3191\uac02\ud7b1\5\2\f\f\17\17$$"+
		"\5\2\f\f\17\17))\5\2\13\f\16\17\"\"\4\2\f\f\17\17\u0182\2\3\3\2\2\2\2"+
		"\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2"+
		"\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2"+
		"\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2"+
		"\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2"+
		"\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2"+
		"\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2"+
		"K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3"+
		"\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2"+
		"\2\2i\3\2\2\2\2k\3\2\2\2\3q\3\2\2\2\5|\3\2\2\2\7\u0085\3\2\2\2\t\u0088"+
		"\3\2\2\2\13\u008b\3\2\2\2\r\u0091\3\2\2\2\17\u0093\3\2\2\2\21\u0095\3"+
		"\2\2\2\23\u0097\3\2\2\2\25\u0099\3\2\2\2\27\u009b\3\2\2\2\31\u009d\3\2"+
		"\2\2\33\u00a4\3\2\2\2\35\u00ac\3\2\2\2\37\u00af\3\2\2\2!\u00b6\3\2\2\2"+
		"#\u00bb\3\2\2\2%\u00c3\3\2\2\2\'\u00c6\3\2\2\2)\u00c9\3\2\2\2+\u00cc\3"+
		"\2\2\2-\u00ce\3\2\2\2/\u00d0\3\2\2\2\61\u00d3\3\2\2\2\63\u00d5\3\2\2\2"+
		"\65\u00d7\3\2\2\2\67\u00d9\3\2\2\29\u00db\3\2\2\2;\u00dd\3\2\2\2=\u00df"+
		"\3\2\2\2?\u00e1\3\2\2\2A\u00e3\3\2\2\2C\u00e5\3\2\2\2E\u00e8\3\2\2\2G"+
		"\u00eb\3\2\2\2I\u00ee\3\2\2\2K\u00f2\3\2\2\2M\u00f4\3\2\2\2O\u00f7\3\2"+
		"\2\2Q\u00f9\3\2\2\2S\u00fc\3\2\2\2U\u0100\3\2\2\2W\u0103\3\2\2\2Y\u0105"+
		"\3\2\2\2[\u0107\3\2\2\2]\u010a\3\2\2\2_\u0126\3\2\2\2a\u0133\3\2\2\2c"+
		"\u0147\3\2\2\2e\u0149\3\2\2\2g\u0151\3\2\2\2i\u0155\3\2\2\2k\u0163\3\2"+
		"\2\2m\u0170\3\2\2\2o\u0175\3\2\2\2qr\7k\2\2rs\7o\2\2st\7r\2\2tu\7q\2\2"+
		"uv\7t\2\2vw\7v\2\2wx\7L\2\2xy\7c\2\2yz\7x\2\2z{\7c\2\2{\4\3\2\2\2|}\7"+
		"r\2\2}~\7c\2\2~\177\7t\2\2\177\u0080\7c\2\2\u0080\u0081\7o\2\2\u0081\u0082"+
		"\7f\2\2\u0082\u0083\7g\2\2\u0083\u0084\7h\2\2\u0084\6\3\2\2\2\u0085\u0086"+
		"\7c\2\2\u0086\u0087\7u\2\2\u0087\b\3\2\2\2\u0088\u0089\7>\2\2\u0089\u008a"+
		"\7/\2\2\u008a\n\3\2\2\2\u008b\u008c\7h\2\2\u008c\u008d\7p\2\2\u008d\u008e"+
		"\7f\2\2\u008e\u008f\7g\2\2\u008f\u0090\7h\2\2\u0090\f\3\2\2\2\u0091\u0092"+
		"\7*\2\2\u0092\16\3\2\2\2\u0093\u0094\7+\2\2\u0094\20\3\2\2\2\u0095\u0096"+
		"\7<\2\2\u0096\22\3\2\2\2\u0097\u0098\7}\2\2\u0098\24\3\2\2\2\u0099\u009a"+
		"\7\177\2\2\u009a\26\3\2\2\2\u009b\u009c\7.\2\2\u009c\30\3\2\2\2\u009d"+
		"\u009e\7t\2\2\u009e\u009f\7g\2\2\u009f\u00a0\7v\2\2\u00a0\u00a1\7w\2\2"+
		"\u00a1\u00a2\7t\2\2\u00a2\u00a3\7p\2\2\u00a3\32\3\2\2\2\u00a4\u00a5\7"+
		"v\2\2\u00a5\u00a6\7{\2\2\u00a6\u00a7\7r\2\2\u00a7\u00a8\7g\2\2\u00a8\u00a9"+
		"\7f\2\2\u00a9\u00aa\7g\2\2\u00aa\u00ab\7h\2\2\u00ab\34\3\2\2\2\u00ac\u00ad"+
		"\7k\2\2\u00ad\u00ae\7h\2\2\u00ae\36\3\2\2\2\u00af\u00b0\7g\2\2\u00b0\u00b1"+
		"\7n\2\2\u00b1\u00b2\7u\2\2\u00b2\u00b3\7g\2\2\u00b3\u00b4\7k\2\2\u00b4"+
		"\u00b5\7h\2\2\u00b5 \3\2\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8\7n\2\2\u00b8"+
		"\u00b9\7u\2\2\u00b9\u00ba\7g\2\2\u00ba\"\3\2\2\2\u00bb\u00bc\7h\2\2\u00bc"+
		"\u00bd\7q\2\2\u00bd\u00be\7t\2\2\u00be\u00bf\7g\2\2\u00bf\u00c0\7c\2\2"+
		"\u00c0\u00c1\7e\2\2\u00c1\u00c2\7j\2\2\u00c2$\3\2\2\2\u00c3\u00c4\7k\2"+
		"\2\u00c4\u00c5\7p\2\2\u00c5&\3\2\2\2\u00c6\u00c7\7T\2\2\u00c7\u00c8\7"+
		"}\2\2\u00c8(\3\2\2\2\u00c9\u00ca\7t\2\2\u00ca\u00cb\7}\2\2\u00cb*\3\2"+
		"\2\2\u00cc\u00cd\7]\2\2\u00cd,\3\2\2\2\u00ce\u00cf\7_\2\2\u00cf.\3\2\2"+
		"\2\u00d0\u00d1\7/\2\2\u00d1\u00d2\7@\2\2\u00d2\60\3\2\2\2\u00d3\u00d4"+
		"\7?\2\2\u00d4\62\3\2\2\2\u00d5\u00d6\7\60\2\2\u00d6\64\3\2\2\2\u00d7\u00d8"+
		"\7/\2\2\u00d8\66\3\2\2\2\u00d9\u00da\7\'\2\2\u00da8\3\2\2\2\u00db\u00dc"+
		"\7`\2\2\u00dc:\3\2\2\2\u00dd\u00de\7,\2\2\u00de<\3\2\2\2\u00df\u00e0\7"+
		"\61\2\2\u00e0>\3\2\2\2\u00e1\u00e2\7-\2\2\u00e2@\3\2\2\2\u00e3\u00e4\7"+
		"(\2\2\u00e4B\3\2\2\2\u00e5\u00e6\7k\2\2\u00e6\u00e7\7u\2\2\u00e7D\3\2"+
		"\2\2\u00e8\u00e9\7#\2\2\u00e9\u00ea\7?\2\2\u00eaF\3\2\2\2\u00eb\u00ec"+
		"\7>\2\2\u00ec\u00ed\7@\2\2\u00edH\3\2\2\2\u00ee\u00ef\7p\2\2\u00ef\u00f0"+
		"\7q\2\2\u00f0\u00f1\7v\2\2\u00f1J\3\2\2\2\u00f2\u00f3\7@\2\2\u00f3L\3"+
		"\2\2\2\u00f4\u00f5\7@\2\2\u00f5\u00f6\7?\2\2\u00f6N\3\2\2\2\u00f7\u00f8"+
		"\7>\2\2\u00f8P\3\2\2\2\u00f9\u00fa\7>\2\2\u00fa\u00fb\7?\2\2\u00fbR\3"+
		"\2\2\2\u00fc\u00fd\7c\2\2\u00fd\u00fe\7p\2\2\u00fe\u00ff\7f\2\2\u00ff"+
		"T\3\2\2\2\u0100\u0101\7q\2\2\u0101\u0102\7t\2\2\u0102V\3\2\2\2\u0103\u0104"+
		"\7=\2\2\u0104X\3\2\2\2\u0105\u0106\4\62;\2\u0106Z\3\2\2\2\u0107\u0108"+
		"\t\2\2\2\u0108\\\3\2\2\2\u0109\u010b\5Y-\2\u010a\u0109\3\2\2\2\u010b\u010c"+
		"\3\2\2\2\u010c\u010a\3\2\2\2\u010c\u010d\3\2\2\2\u010d\u0114\3\2\2\2\u010e"+
		"\u0110\7\60\2\2\u010f\u0111\5Y-\2\u0110\u010f\3\2\2\2\u0111\u0112\3\2"+
		"\2\2\u0112\u0110\3\2\2\2\u0112\u0113\3\2\2\2\u0113\u0115\3\2\2\2\u0114"+
		"\u010e\3\2\2\2\u0114\u0115\3\2\2\2\u0115^\3\2\2\2\u0116\u011a\7$\2\2\u0117"+
		"\u0119\n\3\2\2\u0118\u0117\3\2\2\2\u0119\u011c\3\2\2\2\u011a\u0118\3\2"+
		"\2\2\u011a\u011b\3\2\2\2\u011b\u011d\3\2\2\2\u011c\u011a\3\2\2\2\u011d"+
		"\u0127\7$\2\2\u011e\u0122\7)\2\2\u011f\u0121\n\4\2\2\u0120\u011f\3\2\2"+
		"\2\u0121\u0124\3\2\2\2\u0122\u0120\3\2\2\2\u0122\u0123\3\2\2\2\u0123\u0125"+
		"\3\2\2\2\u0124\u0122\3\2\2\2\u0125\u0127\7)\2\2\u0126\u0116\3\2\2\2\u0126"+
		"\u011e\3\2\2\2\u0127`\3\2\2\2\u0128\u0129\7p\2\2\u0129\u012a\7w\2\2\u012a"+
		"\u012b\7n\2\2\u012b\u0134\7n\2\2\u012c\u012d\7p\2\2\u012d\u012e\7k\2\2"+
		"\u012e\u0134\7n\2\2\u012f\u0130\7P\2\2\u0130\u0131\7W\2\2\u0131\u0132"+
		"\7N\2\2\u0132\u0134\7N\2\2\u0133\u0128\3\2\2\2\u0133\u012c\3\2\2\2\u0133"+
		"\u012f\3\2\2\2\u0134b\3\2\2\2\u0135\u0136\7v\2\2\u0136\u0137\7t\2\2\u0137"+
		"\u0138\7w\2\2\u0138\u0148\7g\2\2\u0139\u013a\7h\2\2\u013a\u013b\7c\2\2"+
		"\u013b\u013c\7n\2\2\u013c\u013d\7u\2\2\u013d\u0148\7g\2\2\u013e\u013f"+
		"\7V\2\2\u013f\u0140\7T\2\2\u0140\u0141\7W\2\2\u0141\u0148\7G\2\2\u0142"+
		"\u0143\7H\2\2\u0143\u0144\7C\2\2\u0144\u0145\7N\2\2\u0145\u0146\7U\2\2"+
		"\u0146\u0148\7G\2\2\u0147\u0135\3\2\2\2\u0147\u0139\3\2\2\2\u0147\u013e"+
		"\3\2\2\2\u0147\u0142\3\2\2\2\u0148d\3\2\2\2\u0149\u014e\5[.\2\u014a\u014d"+
		"\5[.\2\u014b\u014d\5Y-\2\u014c\u014a\3\2\2\2\u014c\u014b\3\2\2\2\u014d"+
		"\u0150\3\2\2\2\u014e\u014c\3\2\2\2\u014e\u014f\3\2\2\2\u014ff\3\2\2\2"+
		"\u0150\u014e\3\2\2\2\u0151\u0152\5m\67\2\u0152\u0153\3\2\2\2\u0153\u0154"+
		"\b\64\2\2\u0154h\3\2\2\2\u0155\u0156\7\61\2\2\u0156\u0157\7,\2\2\u0157"+
		"\u015b\3\2\2\2\u0158\u015a\13\2\2\2\u0159\u0158\3\2\2\2\u015a\u015d\3"+
		"\2\2\2\u015b\u015c\3\2\2\2\u015b\u0159\3\2\2\2\u015c\u015e\3\2\2\2\u015d"+
		"\u015b\3\2\2\2\u015e\u015f\7,\2\2\u015f\u0160\7\61\2\2\u0160\u0161\3\2"+
		"\2\2\u0161\u0162\b\65\2\2\u0162j\3\2\2\2\u0163\u0164\7\61\2\2\u0164\u0165"+
		"\7\61\2\2\u0165\u0169\3\2\2\2\u0166\u0168\13\2\2\2\u0167\u0166\3\2\2\2"+
		"\u0168\u016b\3\2\2\2\u0169\u016a\3\2\2\2\u0169\u0167\3\2\2\2\u016a\u016c"+
		"\3\2\2\2\u016b\u0169\3\2\2\2\u016c\u016d\5o8\2\u016d\u016e\3\2\2\2\u016e"+
		"\u016f\b\66\2\2\u016fl\3\2\2\2\u0170\u0171\t\5\2\2\u0171n\3\2\2\2\u0172"+
		"\u0173\7\17\2\2\u0173\u0176\7\f\2\2\u0174\u0176\t\6\2\2\u0175\u0172\3"+
		"\2\2\2\u0175\u0174\3\2\2\2\u0176p\3\2\2\2\20\2\u010c\u0112\u0114\u011a"+
		"\u0122\u0126\u0133\u0147\u014c\u014e\u015b\u0169\u0175\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}